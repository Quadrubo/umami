name: Create docker images (manual)

on:
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: Version
        required: true

jobs:
  build:
    name: Build, push, and deploy
    runs-on: ubuntu-latest

    strategy:
      matrix:
        db-type: [postgresql, mysql]

    steps:
      - uses: actions/checkout@v3

      - name: Extract version parts from input
        id: extract_version
        run: |
          echo "version=$(echo ${{ github.event.inputs.version }})" >> $GITHUB_ENV
          echo "major=$(echo ${{ github.event.inputs.version }} | cut -d. -f1)" >> $GITHUB_ENV
          echo "minor=$(echo ${{ github.event.inputs.version }} | cut -d. -f2)" >> $GITHUB_ENV

      - name: Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            name=umamisoftware/umami
            name=ghcr.io/umami-software/umami
          tags: |
            type=semver,pattern=${{ matrix.db-type }}-v{{ env.version }}
            type=semver,pattern=${{ matrix.db-type }}-v{{ env.major}}.{{ env.minor }}
            type=semver,pattern=${{ matrix.db-type }}-v{{ env.major}}
            type=raw,value=${{ matrix.db-type }}-latest

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image to ghcr.io for ${{ matrix.db-type }}
        with:
          image: umami
          tags: ${{ steps.meta.outputs.tags }}
          buildArgs: DATABASE_TYPE=${{ matrix.db-type }}
          registry: ghcr.io
          multiPlatform: true
          platform: linux/amd64,linux/arm64
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image to docker.io for ${{ matrix.db-type }}
        with:
          image: umamisoftware/umami
          tags: ${{ steps.meta.outputs.tags }}
          buildArgs: DATABASE_TYPE=${{ matrix.db-type }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}